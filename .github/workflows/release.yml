name: Release

on:
  pull_request:
    branches:
      - "main"
      - "ci"
      - "[0-9]+.[0-9x]+*"
    paths:
      - "parsing/_version.py"

jobs:
  validate-release-request:
    runs-on: ubuntu-latest
    steps:
      - name: Validate release PR
        uses: edgedb/action-release/validate-pr@master
        id: checkver
        with:
          require_team: Release Managers
          require_approval: no
          github_token: ${{ secrets.RELEASE_BOT_GITHUB_TOKEN }}
          version_file: parsing/_version.py
          version_line_pattern: |
            __version__\s*=\s*(?:['"])([[:PEP440:]])(?:['"])

      - name: Stop if not approved
        if: steps.checkver.outputs.approved != 'true'
        run: |
          echo ::error::PR is not approved yet.
          exit 1

      - name: Store release version for later use
        env:
          VERSION: ${{ steps.checkver.outputs.version }}
        run: |
          mkdir -p dist/
          echo "${VERSION}" > dist/VERSION

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/

  build-sdist:
    needs: validate-release-request
    runs-on: ubuntu-latest

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Build source distribution
        run: |
          pip install -U setuptools wheel pip
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*.tar.*

  build-wheels:
    needs: validate-release-request
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        cibw_python: ["cp37-*", "cp38-*", "cp39-*", "cp310-*"]
        cibw_arch: ["auto64"]
        exclude:
          # mypyc seems to be busted on Windows under Python 3.10
          - os: windows-latest
            cibw_python: "cp310-*"

    defaults:
      run:
        shell: bash

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
          submodules: true

      - uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_ENVIRONMENT: "PARSING_USE_MYPYC=1"
          CIBW_BEFORE_ALL_LINUX: >
            yum -y install libffi-devel
          CIBW_TEST_EXTRAS: "test"
          CIBW_TEST_COMMAND: >
            python {project}/parsing/tests/__init__.py
          CIBW_TEST_COMMAND_WINDOWS: >
            python {project}\parsing\tests\__init__.py

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: wheelhouse/*.whl

  publish:
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
          submodules: false

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      - name: Extract Release Version
        id: relver
        run: |
          set -e
          echo ::set-output name=version::$(cat dist/VERSION)
          rm dist/VERSION

      - name: Merge and tag the PR
        uses: edgedb/action-release/merge@master
        with:
          github_token: ${{ secrets.RELEASE_BOT_GITHUB_TOKEN }}
          ssh_key: ${{ secrets.RELEASE_BOT_SSH_KEY }}
          gpg_key: ${{ secrets.RELEASE_BOT_GPG_KEY }}
          gpg_key_id: "5C468778062D87BF!"
          tag_name: v${{ steps.relver.outputs.version }}

      - name: Publish Github Release
        uses: elprans/gh-action-create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.relver.outputs.version }}
          release_name: v${{ steps.relver.outputs.version }}
          target: ${{ github.event.pull_request.base.ref }}
          body: ${{ github.event.pull_request.body }}

      - run: |
          ls -al dist/

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # password: ${{ secrets.TEST_PYPI_TOKEN }}
          # repository_url: https://test.pypi.org/legacy/
